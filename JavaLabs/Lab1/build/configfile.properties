> = Lab1.commands.FlowCommand.RIGHT
v = Lab1.commands.FlowCommand.DOWN
< = Lab1.commands.FlowCommand.LEFT
^ = Lab1.commands.FlowCommand.UP
\# = Lab1.commands.FlowCommand.SkipNext
+ = Lab1.commands.StackCommands.Add
\\ = Lab1.commands.StackCommands.Swap
/ = Lab1.commands.StackCommands.Divide
@ = Lab1.commands.StackCommands.End
` = Lab1.commands.StackCommands.Greater
& = Lab1.commands.StackCommands.InputInteger
~ = Lab1.commands.StackCommands.InputCharacter
% = Lab1.commands.StackCommands.Modulo
* = Lab1.commands.StackCommands.Multiply
\! = Lab1.commands.StackCommands.Not
, = Lab1.commands.StackCommands.PopChar
. = Lab1.commands.StackCommands.PopInteger
$ = Lab1.commands.StackCommands.PopDiscard
- = Lab1.commands.StackCommands.Substract
" = Lab1.commands.StackCommands.PushString
| = Lab1.commands.DecisionMaking.HorisontalIf
_ = Lab1.commands.DecisionMaking.VerticalIf
\: = Lab1.commands.StackCommands.Duplication
0 = Lab1.commands.StackCommands.Push
1 = Lab1.commands.StackCommands.Push
2 = Lab1.commands.StackCommands.Push
3 = Lab1.commands.StackCommands.Push
4 = Lab1.commands.StackCommands.Push
5 = Lab1.commands.StackCommands.Push
6 = Lab1.commands.StackCommands.Push
7 = Lab1.commands.StackCommands.Push
8 = Lab1.commands.StackCommands.Push
9 = Lab1.commands.StackCommands.Push
g = Lab1.commands.FlowAlter.PushFromFlow
p = Lab1.commands.FlowAlter.PopIntoFlow
